Χρησιμοποιήσαμε τον Timer1 σε λειτουργία Fast PWM με την έξοδο σε non-inverting mode (η έξοδος μηδενίζει όταν ο μετρητής έχει τιμή ίσης με OCR1A -- στο Compare Match A -- και τίθεται σε 1 στην μηδενική τιμή του μετρητή -- στο BOTTOM). Η συχνότητα του Timer1 τίθεται στην συχνότητα ρολογιού της ΚΜΕ (16 MHz) για το ελάχιστο ripple της παραγόμενης τάσης. Βέβαια, πιθανώς, να μπορούσαμε να χρησιμοποιήσουμε μικρότερη συχνότητα μετρητή για να μειώσουμε την κατανάλωση ηλεκτρικής ισχύος, καθώς, σε συνδυασμό με το αναλογικό φίλτρο εξομάλυνσης, το λίγο αυξημένο ripple μπορεί να μην επηρεάζει το LED.

Το Duty Cycle ελέγχεται από τον χρόνο εντός της περιόδου του μετρητή όπου ο μετρητής θα μηδενίζει την έξοδο. Οι τιμές των χρόνων αυτών, αποθηκεύτηκαν στην μνήμη προγράμματος και ανακαλούνται κάθε φορά που ο χρήστης πατάει το κουμπί αλλαγής φωτεινότητας.

Με στόχο την ελάχιστη κατανάλωση ηλεκτρικής ισχύος, ανάμεσα στα πατήματα των κουμπιών αλλαγής φωτεινότητας βάζουμε τον AVR σε Idle Sleep απενεργοποιώντας, επίσης, όλα τα εξωτερικά περιφερειακά εκτός του Timer1. Για να λειτουργήσει αυτό, αντί να κάνουμε polling στην main για πατήματα των PD1/PD2 ρυθμίσαμε τις εισόδους PD1/PD2 να προκαλούν διακοπές (PCINT17/PCINT18) και βάλαμε όλη την λογική εξυπηρέτησής τους μέσα στην ρουτίνα εξυπηρέτησης διακοπής (μαζί με το debouncing). Μόλις ολοκληρωθεί η ρουτίνα εξυπηρέτησης διακοπής ξανακοιμίζουμε τον AVR. Στο Idle Sleep ο Timer1 εξακολουθεί να λειτουργεί, οπότε εξακολουθούμε να λαμβάνουμε έξοδο PWM.

